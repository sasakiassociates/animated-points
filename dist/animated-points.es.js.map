{"version":3,"file":null,"sources":["../src/glsl/ShaderIndex.js","../src/AnimatedPoints.js"],"sourcesContent":["import animated_points_vertex from './animated-points-vertex.glsl';\r\nimport animated_points_fragment from './animated-points-fragment.glsl';\r\n\r\nexport var ShaderIndex = {\r\n    animated_points_vertex: animated_points_vertex,\r\n    animated_points_fragment: animated_points_fragment,\r\n};","'use strict';\r\nimport {ShaderIndex} from './glsl/ShaderIndex';\r\n\r\nexport default class AnimatedPoints {\r\n\r\n    constructor(numberOfPoints, sizeAttenuation = false) {\r\n        this.animationTime = 0;\r\n        this.animationPos = 0;\r\n\r\n        this.easingFunction = (v) => {\r\n            return v\r\n        };\r\n\r\n        this.numberOfPoints = numberOfPoints;\r\n        this.sizeAttenuation = sizeAttenuation;\r\n        this.fromProperties = {\r\n            r: new Float32Array(this.numberOfPoints),\r\n            g: new Float32Array(this.numberOfPoints),\r\n            b: new Float32Array(this.numberOfPoints),\r\n            a: new Float32Array(this.numberOfPoints),\r\n            size: new Float32Array(this.numberOfPoints),\r\n        };\r\n        this.toProperties = {\r\n            r: new Float32Array(this.numberOfPoints),\r\n            g: new Float32Array(this.numberOfPoints),\r\n            b: new Float32Array(this.numberOfPoints),\r\n            a: new Float32Array(this.numberOfPoints),\r\n            size: new Float32Array(this.numberOfPoints),\r\n        };\r\n\r\n        this.fromPositions = new Float32Array(this.numberOfPoints * 3);\r\n        this.toPositions = new Float32Array(this.numberOfPoints * 3);\r\n\r\n        this.geometry = new THREE.BufferGeometry();\r\n        this.material = this.getMaterial();\r\n\r\n        for (let i = 0; i < this.numberOfPoints; i++) {\r\n            Object.keys(this.fromProperties).forEach((k) => {\r\n                this.fromProperties[k][i] = 0.1;\r\n                this.toProperties[k][i] = 0.1;\r\n            });\r\n        }\r\n\r\n\r\n        this.particles = new THREE.Points(this.geometry, this.material);\r\n    }\r\n\r\n    getMaterial() {\r\n        //\"position\" is used internally by ThreeJS so the name cannot change\r\n        this.geometry.addAttribute('position', new THREE.BufferAttribute(this.fromPositions, 3));\r\n        this.geometry.addAttribute('position_to', new THREE.BufferAttribute(this.toPositions, 3));\r\n\r\n        Object.keys(this.fromProperties).forEach((k) => {\r\n            this.geometry.addAttribute(k + '_from', new THREE.BufferAttribute(this.fromProperties[k], 1));\r\n            this.geometry.addAttribute(k + '_to', new THREE.BufferAttribute(this.toProperties[k], 1));\r\n        });\r\n\r\n        return new THREE.ShaderMaterial({\r\n            uniforms: {\r\n                animationPos: {value: this.animationPos},\r\n                scale: {type: 'f', value: (this.sizeAttenuation) ? window.innerHeight / 2 : 0},\r\n            },\r\n            transparent: true,\r\n            vertexShader: ShaderIndex.animated_points_vertex,\r\n            fragmentShader: ShaderIndex.animated_points_fragment\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * set the properties to which to animate using an optional easing function\r\n     * @param {Object[]} properties - an array of objects\r\n     *      @param {Number} [properties[].x] - x position\r\n     *      @param {Number} [properties[].y] - y position\r\n     *      @param {Number} [properties[].z] - z position\r\n     *      @param {Number} [properties[].size] - size in pixels\r\n     *      @param {string} [properties[].color] - color in hex format (#ff0000)\r\n     * @param {Function} [easingFn] - an easing function such as those found in the 'eases' package https://www.npmjs.com/package/eases\r\n     */\r\n    setProperties(properties, easingFn) {\r\n        var propKeys = Object.keys(this.fromProperties);\r\n\r\n        if (easingFn) {\r\n            this.easingFunction = easingFn;\r\n        }\r\n\r\n        var keysWithChanges = {};\r\n\r\n        var keyMatch = {\r\n            'position': ['position', 'position_to'],//special case since 'position' is hard-coded in ThreeJSs\r\n        };\r\n\r\n        propKeys.forEach((k) => {\r\n            keyMatch[k] = [`${k}_from`, `${k}_to`]\r\n        });\r\n\r\n        //when setProperties is called, we switch the from position to be the current position of the nodes (even if in the middle of an animation)\r\n        //these values are calculated internally in the shader, but we don't have access to them there\r\n        properties.forEach((obj, i) => {\r\n            propKeys.forEach((k) => {\r\n                this.fromProperties[k][i] = this.fromProperties[k][i] * (1 - this.animationPos) + this.toProperties[k][i] * this.animationPos;\r\n            });\r\n            this.fromPositions[i * 3] = this.fromPositions[i * 3] * (1 - this.animationPos) + this.toPositions[i * 3] * this.animationPos;\r\n            this.fromPositions[i * 3 + 1] = this.fromPositions[i * 3 + 1] * (1 - this.animationPos) + this.toPositions[i * 3 + 1] * this.animationPos;\r\n            this.fromPositions[i * 3 + 2] = this.fromPositions[i * 3 + 2] * (1 - this.animationPos) + this.toPositions[i * 3 + 2] * this.animationPos;\r\n        });\r\n\r\n        properties.forEach((obj, i) => {\r\n            if (obj.color) {\r\n                AnimatedPoints._injectRGB(obj, obj.color)\r\n            }\r\n            propKeys.forEach((k) => {\r\n                if (obj[k] !== null) {\r\n                    if (this.toProperties[k][i] !== obj[k]) {\r\n                        this.toProperties[k][i] = obj[k];\r\n                        keysWithChanges[k] = true;\r\n                    }\r\n                }\r\n            });\r\n            AnimatedPoints._clamp(obj, ['r', 'g', 'b', 'a'], 0, 1);\r\n            if (obj.x !== undefined) {\r\n                if (this.toPositions[i * 3] !== obj.x) {\r\n                    this.toPositions[i * 3] = obj.x;\r\n                    keysWithChanges['position'] = true;\r\n                }\r\n            }\r\n            if (obj.y !== undefined) {\r\n                if (this.toPositions[i * 3 + 1] !== obj.y) {\r\n                    this.toPositions[i * 3 + 1] = obj.y;\r\n                    keysWithChanges['position'] = true;\r\n                }\r\n            }\r\n            if (obj.z !== undefined) {\r\n                if (this.toPositions[i * 3 + 2] !== obj.z) {\r\n                    this.toPositions[i * 3 + 2] = obj.z;\r\n                    keysWithChanges['position'] = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.keys(keysWithChanges).forEach((key) => {\r\n            keyMatch[key].forEach((attr, i) => {\r\n                this.geometry.attributes[attr].needsUpdate = true;\r\n            });\r\n        });\r\n\r\n        this.startAnimation();\r\n    }\r\n\r\n    startAnimation() {\r\n        //TODO if we set the same targets twice it won't call needsUpdate, but it will reset the animation\r\n        this.setAnimationTime(0);\r\n        this.animationComplete = false;\r\n    }\r\n\r\n    attributeKeys(propKeys) {\r\n        const keyMatch = {\r\n            'position': ['position', 'position_to'],//special case since 'position' is hard-coded in ThreeJSs\r\n        };\r\n\r\n        for (let k of propKeys) {\r\n            keyMatch[k] = [k + '_from', k + '_to']\r\n        }\r\n        return keyMatch;\r\n    }\r\n\r\n    setEndToStart() {\r\n        const propKeys = Object.keys(this.fromProperties);\r\n        const keyMatch = this.attributeKeys(propKeys);\r\n        const n = this.numberOfPoints;\r\n        // console.time('setEndToStart');\r\n        for (let i = 0; i < n; i++) {\r\n            for (let k of propKeys) {\r\n                this.fromProperties[k][i] = this.toProperties[k][i];\r\n            }\r\n            this.fromPositions[i * 3] = this.toPositions[i * 3];\r\n            this.fromPositions[i * 3 + 1] = this.toPositions[i * 3 + 1];\r\n            this.fromPositions[i * 3 + 2] = this.toPositions[i * 3 + 2];\r\n        }\r\n\r\n        //once they are all reset, we need to push these changes through\r\n        for (let key of Object.keys(keyMatch)) {\r\n            for (let attr of keyMatch[key]) {\r\n                // console.log(`Needs update ${attr}`);\r\n                this.geometry.attributes[attr].needsUpdate = true;\r\n            }\r\n        }\r\n        // this.geometry.verticesNeedUpdate = true;\r\n        this.geometry.computeBoundingSphere();//if we don't recompute, then the point cloud object may be hidden if the current boundingSphere is not in view\r\n        // console.timeEnd('setEndToStart');\r\n    }\r\n\r\n    setAnimationTime(val) {\r\n        this.animationTime = Math.max(0, Math.min(1, val));\r\n        this.animationPos = this.easingFunction(this.animationTime);\r\n\r\n        this.material.uniforms.animationPos.value = this.animationPos;\r\n\r\n        if (!this.animationComplete && this.animationTime === 1) {\r\n            this.animationComplete = true;\r\n            this.setEndToStart();\r\n        }\r\n    }\r\n\r\n    step(amt) {\r\n        this.setAnimationTime(this.animationTime + amt);\r\n    }\r\n\r\n    getObject() {\r\n        return this.particles;\r\n    }\r\n\r\n    static _hexToRgb(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    static _clamp(obj, props, min, max) {\r\n        for (let prop of props) {\r\n            obj[prop] = Math.min(Math.max(obj[prop], min), max);\r\n        }\r\n    }\r\n\r\n    static _injectRGB(obj, color) {\r\n        var rgb = AnimatedPoints._hexToRgb(color);\r\n        if (!rgb) {\r\n            obj.r = 0;\r\n            obj.g = 0;\r\n            obj.b = 0;\r\n            obj.a = 0;\r\n            return;\r\n        }\r\n        obj.r = rgb.r / 255;\r\n        obj.g = rgb.g / 255;\r\n        obj.b = rgb.b / 255;\r\n\r\n        if (!obj.a) {\r\n            obj.a = 1;\r\n        }\r\n\r\n    }\r\n}"],"names":["ShaderIndex","animated_points_vertex","animated_points_fragment","AnimatedPoints","numberOfPoints","sizeAttenuation","animationTime","animationPos","easingFunction","v","fromProperties","Float32Array","toProperties","fromPositions","toPositions","geometry","THREE","BufferGeometry","material","getMaterial","i","keys","forEach","k","particles","Points","addAttribute","BufferAttribute","ShaderMaterial","value","type","window","innerHeight","properties","easingFn","propKeys","Object","keysWithChanges","keyMatch","obj","color","_injectRGB","_clamp","x","undefined","y","z","key","attr","attributes","needsUpdate","startAnimation","setAnimationTime","animationComplete","attributeKeys","n","computeBoundingSphere","val","Math","max","min","uniforms","setEndToStart","amt","hex","result","exec","parseInt","props","prop","rgb","_hexToRgb","r","g","b","a"],"mappings":"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"}